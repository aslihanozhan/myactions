name: Phyton Deployment and Security Check with AWS S3

on:
  push:
    branches:  main 
  pull_request:
    branches: main 

permissions:
  security-events: write
  contents: read

jobs: 
  build-test-deploy:
    runs-on: ubuntu-latest

    steps:            ##Download exist repostory 
    - name: Checkout code
      uses: actions/checkout@v4

    
    - name: Phyton Setup Firstly    
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'

   
    - name: Install dependencies  ##Install Phyton exktra packages for automation
      run: |
        python -m pip install --upgrade pip ##upgrade packgaes to latest version 
        pip install pytest    ## fro code testing
        pip install -r requirements.txt ##install listed packages


    - name: Run tests  ##test part works and result written on tes_result.xml
      run: pytest --junitxml=test_results.xml

 
    - name: Creation of missing folder witha file  ##from previous docker,there is no exist dist file but just incase i order to create this forlder
      run: |
        mkdir dist
        echo "Hello from Python deployment!It is Aslihan World" > dist/index.html
        
    - name: Upload test results
      if: always()
      uses: actions/upload-artifact@v4 ##test result will taken from workflow to GÄ±thub UI 
      with:
        name: test-results
        path: test_results.xml

    - name: Initialize CodeQL
      uses: github/codeql-action/init@v3 ## CodeQL is started 
      with:
        languages: python

    - name: Run CodeQL Analysis
      uses: github/codeql-action/analyze@v3 ## CodeQL is started to analysis for vulnerability

    - name: Deploy to AWS S3   ##My only exist staging server is AWS so that the app file will be transfer into bucket
      uses: jakejarvis/s3-sync-action@v0.5.1
      with:
        args: --delete
      env:
        AWS_S3_BUCKET: ${{ secrets.AWS_BUCKET_NAME }}
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        SOURCE_DIR: ./dist

    - name: Slack Notification - Deployed to S3  ##When automation is finished, notification will send to me through Slack 
      uses: slackapi/slack-github-action@v1.24.0
      with:
        payload: |
          {
            "text": ":cloud: *Deployment to AWS S3 complete!* Your app is live in the S3 bucket `${{ secrets.AWS_BUCKET_NAME }}`."
          }
      env:
        SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK }}
